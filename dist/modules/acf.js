(()=>{"use strict";var t,e,a=jQuery,n=function(t){acf.registerFieldType(acf.models.FileField.extend({type:t,$control:function(){return this.$(".acf-file-uploader.current-language")},$input:function(){return this.$('.acf-file-uploader.current-language input[type="hidden"]')},render:function(t){t=this.validateAttachment(t),this.$control().find("img").attr({src:t.icon,alt:t.alt,title:t.title}),this.$control().find('[data-name="title"]').text(t.title),this.$control().find('[data-name="filename"]').text(t.filename).attr("href",t.url),this.$control().find('[data-name="filesize"]').text(t.filesizeHumanReadable);var e=t.id||"";acf.val(this.$input(),e),e?this.$control().addClass("has-value"):this.$control().removeClass("has-value")}}))},i=function(t){acf.registerFieldType(acf.models.ImageField.extend({type:t,$control:function(){return this.$(".acf-image-uploader.current-language")},$input:function(){return this.$('.acf-image-uploader.current-language input[type="hidden"]')},render:function(t){t=this.validateAttachment(t),this.$control().find("img").attr({src:t.url,alt:t.alt,title:t.title});var e=t.id||"";this.val(e),e?this.$control().addClass("has-value"):this.$control().removeClass("has-value")}}))},l=function(t){acf.registerFieldType(acf.models.PostObjectField.extend({type:t,$control:function(){return this.$(".acf-post-object.current-language")},$input:function(){return this.$(".acf-post-object.current-language select")},initialize:function(){var t=this,e=this.$input();if(this.inherit(e),this.get("ui")){var n=this.get("ajax_action");n||(n="acf/fields/"+this.get("type")+"/query"),this.select2=[],this.$(".acf-post-object select").each(function(){var e=acf.newSelect2(a(this),{field:t,ajax:t.get("ajax"),multiple:t.get("multiple"),placeholder:t.get("placeholder"),allowNull:t.get("allow_null"),ajaxAction:n});t.select2.push(e)}),this.$(".acf-post-object span.select2-selection").addClass(qTranx.config.styles.translatable)}},onRemove:function(){if(this.select2)for(var t=0;t<this.select2.length;t++)this.select2[t].destroy()}}))},r=function(t){acf.registerFieldType(acf.models.UrlField.extend({type:t,$control:function(){return this.$(".acf-input-wrap.current-language")},$input:function(){return this.$('.acf-input-wrap.current-language input[type="url"]')}}))},o=function(t){acf.registerFieldType(acf.models.WysiwygField.extend({type:t,$control:function(){return this.$(".acf-editor-wrap.current-language")},$input:function(){return this.$(".acf-editor-wrap.current-language textarea")},initializeEditor:function(){var t=this;this.$(".acf-editor-wrap").each(function(){var e=a(this),n=e.find("textarea"),i={tinymce:!0,quicktags:!0,toolbar:t.get("toolbar"),mode:t.getMode(),field:t},l=n.attr("id"),r=acf.uniqueId("acf-editor-");acf.rename({target:e,search:l,replace:r,destructive:!0}),t.set("id",r,!0),acf.tinymce.initialize(r,i)})}})),acf.addFilter("wysiwyg_tinymce_settings",function(e,a,n){if(n.type===t){var i=e.init_instance_callback;e.init_instance_callback=function(t){void 0!==i&&i(),t.getContentAreaContainer().classList.add(qTranx.config.styles.translatable)}}return e})},c=jQuery,s=c("body"),u=function(t){var e=c(".multi-language-field");e.find(".current-language").removeClass("current-language"),e.find('[data-language="'+t+'"]').addClass("current-language")};wp.hooks.addAction("qtranx.languageSwitch","qtranx/acf/switch",function(t){u(t)}),s.on("click",".wp-switch-editor[data-language]",function(){var t=c(this).data("language");return qTranx.hooks.switchActiveLanguage(t)&&c(this).parent(".multi-language-field").find('input[data-language="'+t+'"], textarea[data-language="'+t+'"]').trigger("focus"),!1}),s.on("focusin",".multi-language-field input, .multi-language-field textarea",function(){c(this).parent(".multi-language-field").addClass("focused")}),s.on("focusout",".multi-language-field input, .multi-language-field textarea",function(){c(this).parent(".multi-language-field").removeClass("focused")}),s.on("click",".wp-editor-tabs .wp-switch-editor",function(){var t=c(this).parents(".multi-language-field"),e=c(this).hasClass("switch-tmce")?"tmce":"html";t.find(".wp-editor-tabs .wp-switch-editor.switch-"+e).not(this).each(function(){var t=c(this).attr("data-wp-editor-id");t&&window.switchEditors.go(t,e)})});var d=jQuery;!function(t){for(var e in t)switch(e){case"qtranslate_file":n(e);break;case"qtranslate_image":i(e);break;case"qtranslate_post_object":l(e);break;case"qtranslate_url":r(e);break;case"qtranslate_wysiwyg":o(e);break;case"qtranslate_text":case"qtranslate_textarea":break;default:console.warn("[qTranslate-XT] Unknown extended ACF field: ",e)}}(null!==(t=null===(e=window.qTranslateModuleAcf)||void 0===e?void 0:e.qtranslate_fields)&&void 0!==t?t:[]),wp.hooks.addAction("qtranx.load","qtranx/acf/load",function(){qTranx.hooks.enableLanguageSwitchingButtons("block");var t=function(t){var e;return!(null===(e=window.qTranslateModuleAcf)||void 0===e||null===(e=e.standard_fields)||void 0===e||!e[t])},e=function(t){var e;return!(null===(e=window.qTranslateModuleAcf)||void 0===e||null===(e=e.group_sub_fields)||void 0===e||!e[t])},a=d("#post_type").val();"acf-field-group"!==a?(d.each({text:"input:text",textarea:"textarea"},function(n,i){acf.findFields({type:n}).each(function(){d(this).find(i).each(function(){!qTranx.hooks.hasContentHook(this)&&function(a,n){return"acf-post-type"===n||"acf-taxonomy"===n?e("label")&&a.id.match(/acf_(post_type|taxonomy)-labels.*/):t(a.type)}(this,a)&&qTranx.hooks.addContentHook(this)})})}),t("wysiwyg")&&acf.addFilter("wysiwyg_tinymce_settings",function(t,e,a){if("wysiwyg"===a.type){var n=a.$input()[0];qTranx.hooks.addContentHook(n);var i=t.init_instance_callback;t.init_instance_callback=function(t){void 0!==i&&i(),qTranx.hooks.attachEditorHook(t)}}return t}),qTranx.hooks.setupLanguageSwitch(),qTranx.config.isEditorModeLSB()&&u(qTranx.hooks.getActiveLanguage())):acf.addAction("open_field_object",function(a){a.$el.find("input:text, textarea").each(function(){var a=this;!qTranx.hooks.hasContentHook(a)&&function(a){var n=a.id.match(/acf_fields-(\d+|field_[a-z0-9]+)-(label|instructions|default_value)/);return n&&e(n[2])&&("default_value"!==n[2]||t(a.type))}(a)&&qTranx.hooks.addContentHook(a)})})})})();